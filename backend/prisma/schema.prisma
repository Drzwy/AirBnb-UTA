// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id           Int       @id @default(autoincrement())
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  tipo_usuario UserTypes @default(Cliente)
  email        String    @unique
  hash         String

  run         String @unique
  nombre      String
  apellidoPat String
  apellidoMat String

  descripcion String
  idiomas     String[]
  detalles    String[]

  anfitrionDe Propiedad[]  @relation("Es due単o")
  seHospedaEn Hospedaje[]  @relation("se hospeda")
  haValorado  Valoracion[] @relation("rese単a")
  haRecibido  Valoracion[] @relation("es criticado")
}

enum UserTypes {
  Cliente
  Administrador
}

model Propiedad {
  id Int @id @default(autoincrement())

  dormitorios       Int
  camas             Int
  banos             Int
  fechasDisponibles DateTime[] @db.Date
  precioNoche       Float

  tipo        String
  descripcion String
  calle       String
  nroCasa     Int
  nroDpto     Int?

  comodidades           String[]
  opciones_de_seguridad String[]
  opciones_de_llegada   String[]
  reglas                String[]

  Anfitrion   Usuario     @relation(name: "Es due単o", fields: [anfitrionId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  anfitrionId Int
  esProvistaA Hospedaje[] @relation(name: "es provista")

  @@unique(name: "direccion", [calle, nroCasa, nroDpto])
}

model Hospedaje {
  Huesped     Usuario   @relation(name: "se hospeda", fields: [huespedId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  huespedId   Int
  Propiedad   Propiedad @relation(name: "es provista", fields: [propiedadId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  propiedadId Int

  fechaIni DateTime @db.Date
  fechaFin DateTime @db.Date

  @@id([huespedId, propiedadId])
}

model Valoracion {
  Creador   Usuario @relation(name: "rese単a", fields: [usuarioId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  usuarioId Int

  UsuarioCriticado   Usuario? @relation(name: "es criticado", fields: [usuarioCriticadoId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  usuarioCriticadoId Int?

  //TODO: lo que falte
}
